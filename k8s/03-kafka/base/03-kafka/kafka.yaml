apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: demo-kafka
  namespace: kafka
  annotations:
    strimzi.io/node-pools: "enabled"
    strimzi.io/kraft: "enabled"
spec:
  kafka:
    version: 4.0.0
    image: gcr.io/countly-dev-313620/strimzi/kafka:0.47.0-kafka-4.0.0
    # rack:
    #   topologyKey: topology.kubernetes.io/zone
    listeners:
      - name: internal
        port: 9092
        type: internal
        tls: false
    config:
      # Network configuration
      socket.send.buffer.bytes: 102400
      socket.receive.buffer.bytes: 102400
      socket.request.max.bytes: 104857600
      
      # Replication and durability (production)
      default.replication.factor: 3
      min.insync.replicas: 2
      unclean.leader.election.enable: false
      
      # Log settings (simplified for staging)
      log.retention.hours: 168
      log.segment.bytes: 1073741824
      log.cleanup.policy: delete
      
      # Compression
      compression.type: lz4
      
      # Topic creation
      auto.create.topics.enable: false
      
      # Consumer offsets topic configuration (production)
      offsets.topic.replication.factor: 3
      offsets.topic.num.partitions: 24
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      
      # Inter broker protocol
      inter.broker.protocol.version: 4.0
      log.message.format.version: 4.0
    
  cruiseControl:
    # Resource configuration for Cruise Control
    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "1"
        memory: "2Gi"
    
    # JVM options for Cruise Control
    jvmOptions:
      "-Xms": "1g"
      "-Xmx": "2g"
    
    # Cruise Control configuration
    config:
      # Capacity configuration
      cpu.balance.threshold: "1.1"
      disk.balance.threshold: "1.1"
      network.inbound.balance.threshold: "1.1"  
      network.outbound.balance.threshold: "1.1"
      
      # Rebalance configuration (optimized for 3-broker production)
      num.concurrent.partition.movements.per.broker: "5"
      num.concurrent.intra.broker.partition.movements: "2"
      num.concurrent.leader.movements: "100"
      
      # Anomaly detection (must be >= metric sampling interval)
      anomaly.detection.interval.ms: "60000"
      
    # Auto-rebalancing configuration
    autoRebalance:
      - mode: add-brokers
        template:
          name: cc-add-brokers-template
      - mode: remove-brokers
        template:
          name: cc-remove-brokers-template
---
# Rebalance templates (referenced by autoRebalance above)
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaRebalance
metadata:
  name: cc-add-brokers-template
  namespace: kafka
  annotations:
    strimzi.io/rebalance-template: "true"
spec:
  goals: [ CpuCapacityGoal, DiskCapacityGoal, RackAwareGoal ]
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaRebalance
metadata:
  name: cc-remove-brokers-template
  namespace: kafka
  annotations:
    strimzi.io/rebalance-template: "true"
spec:
  goals: [ CpuCapacityGoal, DiskCapacityGoal, RackAwareGoal ]
