apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: strimzi-operator-ns
  namespace: kafka
rules:
# core
- apiGroups: [""]
  resources: ["pods","pods/log","services","endpoints","configmaps","secrets","events","persistentvolumeclaims"]
  verbs: ["get","list","watch","create","update","patch","delete"]
# apps
- apiGroups: ["apps"]
  resources: ["deployments","statefulsets","replicasets"]
  verbs: ["get","list","watch","create","update","patch","delete"]
# policy
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["get","list","watch","create","update","patch","delete"]
# networking (Strimzi can generate NetworkPolicies)
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get","list","watch","create","update","patch","delete"]
# leader election (namespaced Lease)
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get","list","watch","create","update","patch","delete"]
# Strimzi CRDs (namespaced resources)
- apiGroups: ["kafka.strimzi.io"]
  resources: ["*"]
  verbs: ["get","list","watch","create","update","patch","delete"]
# StrimziPodSets (Strimzi internal controller)
- apiGroups: ["core.strimzi.io"]
  resources: ["strimzipodsets"]
  verbs: ["get","list","watch","create","update","patch","delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-operator-ns
  namespace: kafka
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: strimzi-operator-ns