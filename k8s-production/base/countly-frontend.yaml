apiVersion: v1
kind: Service
metadata:
  name: countly-frontend
  namespace: countly
  labels:
    app: countly-frontend
    branch: newarchitecture
    component: frontend
spec:
  selector:
    app: countly-frontend
  ports:
    - name: http
      port: 6001
      targetPort: 6001
      protocol: TCP
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: countly-frontend
  namespace: countly
  labels:
    app: countly-frontend
    branch: newarchitecture
    component: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: countly-frontend
  template:
    metadata:
      labels:
        app: countly-frontend
        branch: newarchitecture
        component: frontend
    spec:
      serviceAccountName: default
      tolerations:
      - key: countly
        operator: Equal
        value: dedicated
        effect: NoSchedule
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - api
                - key: branch
                  operator: In
                  values:
                  - newarchitecture
              topologyKey: kubernetes.io/hostname
      containers:
      - name: countly-frontend
        image: countly-unified
        imagePullPolicy: Always
        command: ["npm", "run", "start:frontend"]
        ports:
        - containerPort: 6001
          name: http
          protocol: TCP
        
        # Load all configuration from ConfigMaps and Secrets
        envFrom:
        - configMapRef:
            name: countly-config
        - configMapRef:
            name: countly-frontend-config
        - secretRef:
            name: common-config
        - secretRef:
            name: mongodb-config
        - secretRef:
            name: clickhouse-config
        
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        
        # Keep original health checks
        livenessProbe:
          httpGet:
            path: /ping
            port: 6001
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 6001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /ping
            port: 6001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        
        # Keep original volume mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /opt/countly/log
      
      # Keep original volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: countly-frontend-hpa
  namespace: countly
  labels:
    app: countly-frontend
    component: hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: countly-frontend
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80