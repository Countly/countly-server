apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: countly-observability
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus.countly-observability.svc.cluster.local:9090
      isDefault: true
      editable: true
      jsonData:
        httpMethod: POST
    - name: Loki
      type: loki
      access: proxy
      url: http://loki.countly-observability.svc.cluster.local:3100
      editable: true
    - name: Tempo
      type: tempo
      access: proxy
      url: http://tempo.countly-observability.svc.cluster.local:3200
      editable: true
      jsonData:
        httpMethod: GET
        tracesToLogs:
          datasourceUid: loki
          tags: ['job', 'instance', 'pod', 'namespace']
          mappedTags: [{ key: 'service.name', value: 'service_name' }]
          mapTagNamesEnabled: true
          spanStartTimeShift: '1h'
          spanEndTimeShift: '1h'
          filterByTraceID: true
          filterBySpanID: true
        serviceMap:
          datasourceUid: prometheus
        search:
          hide: false
        nodeGraph:
          enabled: true
        traceQuery:
          timeShiftEnabled: true
          spanStartTimeShift: '1h'
          spanEndTimeShift: '1h'
        spanBar:
          type: 'Tag'
          tag: 'http.method'
    - name: Pyroscope
      type: grafana-pyroscope-datasource
      access: proxy
      url: http://pyroscope.countly-observability.svc.cluster.local:4040
      editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-providers
  namespace: countly-observability
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards
        defaultFolderName: "General"
        foldersFromFilesStructure: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: countly-observability
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard-rwo
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: countly-observability
  labels:
    app: grafana
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: countly-observability
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsNonRoot: true
      containers:
      - name: grafana
        image: grafana/grafana:12.1.0
        # Updated to latest version 12.1.0 (major version upgrade)
        # changelog https://raw.githubusercontent.com/grafana/grafana/refs/heads/main/CHANGELOG.md
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: grafana-config
        volumeMounts:
        - name: storage
          mountPath: /var/lib/grafana
        - name: datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: dashboard-providers
          mountPath: /etc/grafana/provisioning/dashboards
        - name: dashboards
          mountPath: /var/lib/grafana/dashboards
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            cpu: 250m
            memory: 750Mi
          limits:
            cpu: 1000m
            memory: 1Gi
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: datasources
        configMap:
          name: grafana-datasources
      - name: dashboard-providers
        configMap:
          name: grafana-dashboard-providers
      - name: dashboards
        emptyDir: {}