apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: countly-observability
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'countly-prod'
        environment: 'production'
    
    # Alertmanager configuration
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093
    
    # Load rules once and periodically evaluate them
    rule_files:
      - /etc/prometheus/rules/*.yml
    
    # Remote write API is enabled for receiving metrics from Alloy
    # All scraping is now handled by Alloy
    scrape_configs: []
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: countly-observability
data:
  countly-alerts.yml: |
    groups:
    - name: countly-alerts
      interval: 30s
      rules:
      # High error rate alert
      - alert: HighErrorRate
        expr: |
          sum(rate(countly_http_requests_total{status=~"5.."}[5m])) by (app)
          /
          sum(rate(countly_http_requests_total[5m])) by (app)
          > 0.05
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate on {{ $labels.app }}"
          description: "{{ $labels.app }} has {{ $value | humanizePercentage }} error rate"
      
      # Service down alert
      - alert: ServiceDown
        expr: up{job=~"countly.*"} == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Service {{ $labels.job }} is down"
          description: "{{ $labels.job }} on {{ $labels.instance }} has been down for more than 2 minutes"
      
      # High memory usage
      - alert: HighMemoryUsage
        expr: |
          (container_memory_usage_bytes{pod=~"countly-.*"}
          / container_spec_memory_limit_bytes{pod=~"countly-.*"}) > 0.9
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage on {{ $labels.pod }}"
          description: "{{ $labels.pod }} memory usage is above 90%"
      
      # High CPU usage
      - alert: HighCPUUsage
        expr: |
          rate(container_cpu_usage_seconds_total{pod=~"countly-.*"}[5m]) > 0.9
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage on {{ $labels.pod }}"
          description: "{{ $labels.pod }} CPU usage is above 90%"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: countly-observability
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard-rwo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: countly-observability
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: countly-observability
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: countly-observability
  labels:
    app: prometheus
spec:
  type: ClusterIP
  selector:
    app: prometheus
  ports:
  - name: http
    port: 9090
    targetPort: 9090
    protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: countly-observability
  labels:
    app: prometheus
spec:
  serviceName: prometheus
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      containers:
      - name: prometheus
        image: prom/prometheus:v3.5.0
        # Updated to v3.5.0 (from v2.48.1)
        # NOTE: Scraping functionality has been migrated to Alloy
        # Prometheus now serves only as TSDB, query API, and alerting engine
        # All metric collection is handled by Alloy which sends data via remote write
        # Remote write receiver is enabled with --web.enable-remote-write-receiver
        # See: https://grafana.com/docs/alloy/latest/set-up/migrate/from-prometheus/
        args:
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/prometheus
          - --storage.tsdb.retention.time=30d
          - --storage.tsdb.retention.size=90GB
          - --web.console.libraries=/usr/share/prometheus/console_libraries
          - --web.console.templates=/usr/share/prometheus/consoles
          - --web.enable-lifecycle
          - --web.enable-remote-write-receiver
        ports:
        - containerPort: 9090
          name: http
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: rules
          mountPath: /etc/prometheus/rules
        - name: storage
          mountPath: /prometheus
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 2
            memory: 4Gi
      volumes:
      - name: config
        configMap:
          name: prometheus-config
      - name: rules
        configMap:
          name: prometheus-rules
      - name: storage
        persistentVolumeClaim:
          claimName: prometheus-pvc