# Countly MCP Server Configuration
# Copy this file to .env and update with your values

# ==============================================================================
# REQUIRED SETTINGS
# ==============================================================================

# Your Countly server URL
# For Countly Cloud: https://your-account.count.ly  
# For Self-hosted: https://your-countly-server.com
# For Community Edition: http://localhost
COUNTLY_SERVER_URL=https://your-countly-server.com

# Your Countly API key with appropriate permissions
# Get this from Management > User Management > API Keys
# Needs read permissions for analytics, write permissions for app management
COUNTLY_API_KEY=your_api_key_here

# ==============================================================================
# OPTIONAL SETTINGS
# ==============================================================================

# Request timeout in milliseconds (default: 30000)
# Increase for slow networks or large data sets
COUNTLY_TIMEOUT=30000

# ==============================================================================
# MCP SERVER ANALYTICS (Optional)
# ==============================================================================

# Enable analytics tracking for the MCP server itself
# Set to 'true' to track server usage, tool calls, errors, etc.
MCP_ANALYTICS_ENABLED=false

# Countly server URL for MCP analytics (defaults to COUNTLY_SERVER_URL)
# Use a different server if you want to separate MCP analytics
# MCP_ANALYTICS_SERVER_URL=https://analytics-countly-server.com

# App key for MCP analytics tracking
# If not set, will use COUNTLY_API_KEY and create/find an app
# MCP_ANALYTICS_APP_KEY=your_analytics_app_key

# Device ID for MCP analytics (optional)
# Useful for identifying different MCP server instances
# MCP_ANALYTICS_DEVICE_ID=mcp-server-production

# Debug mode for MCP analytics (default: false)
# Set to 'true' for verbose logging of analytics events
# MCP_ANALYTICS_DEBUG=false

# ==============================================================================
# DEVELOPMENT SETTINGS (Optional)
# ==============================================================================

# Node.js environment
NODE_ENV=production

# Log level for debugging
# Options: error, warn, info, debug
LOG_LEVEL=info
