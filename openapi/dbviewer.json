{
  "openapi": "3.0.0",
  "info": {
    "title": "Countly Database Viewer API",
    "description": "API for viewing and managing database collections in Countly Server",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/o/db": {
      "get": {
        "summary": "Database Viewer Operations",
        "description": "Multi-purpose endpoint for database viewing operations including listing databases/collections, querying documents, running aggregations, and getting indexes",
        "tags": [
          "Database Viewer"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "description": "Application ID to filter results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "db",
            "in": "query",
            "required": false,
            "description": "Database name (countly, countly_drill, countly_out, countly_fs)",
            "schema": {
              "type": "string",
              "enum": ["countly", "countly_drill", "countly_out", "countly_fs"]
            }
          },
          {
            "name": "dbs",
            "in": "query",
            "required": false,
            "description": "Alternative parameter for database name",
            "schema": {
              "type": "string",
              "enum": ["countly", "countly_drill", "countly_out", "countly_fs"]
            }
          },
          {
            "name": "collection",
            "in": "query",
            "required": false,
            "description": "Collection name to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "document",
            "in": "query",
            "required": false,
            "description": "Document ID to retrieve specific document",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "description": "Specific action to perform",
            "schema": {
              "type": "string",
              "enum": ["get_indexes"]
            }
          },
          {
            "name": "aggregation",
            "in": "query",
            "required": false,
            "description": "MongoDB aggregation pipeline as JSON string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "MongoDB query filter as JSON string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "description": "Alternative parameter for MongoDB query filter as JSON string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "description": "MongoDB projection as JSON string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "required": false,
            "description": "Alternative parameter for MongoDB projection as JSON string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "MongoDB sort criteria as JSON string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of documents to return",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 20
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "description": "Number of documents to skip for pagination",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "sSearch",
            "in": "query",
            "required": false,
            "description": "Search term for document IDs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Database operation completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "description": "List of databases and their collections",
                      "items": {
                        "$ref": "#/components/schemas/DatabaseInfo"
                      }
                    },
                    {
                      "type": "object",
                      "description": "Paginated collection data",
                      "properties": {
                        "limit": {
                          "type": "integer"
                        },
                        "start": {
                          "type": "integer"
                        },
                        "end": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "pages": {
                          "type": "integer"
                        },
                        "curPage": {
                          "type": "integer"
                        },
                        "collections": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": true
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Single document result",
                      "additionalProperties": true
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/o/db/mongotop": {
      "get": {
        "summary": "Get MongoDB Top Statistics",
        "description": "Retrieve MongoDB top statistics (requires global admin privileges)",
        "tags": [
          "Database Statistics"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication (global admin required)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MongoDB top statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/db/mongostat": {
      "get": {
        "summary": "Get MongoDB Statistics", 
        "description": "Retrieve MongoDB statistics (requires global admin privileges)",
        "tags": [
          "Database Statistics"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication (global admin required)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MongoDB statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DatabaseInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Database name"
          },
          "collections": {
            "type": "object",
            "description": "Object mapping pretty collection names to actual collection names",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": ["name", "collections"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "description": "Error message or result status"
          }
        }
      }
    }
  }
}
