{
  "openapi": "3.0.0",
  "info": {
    "title": "Countly Core API",
    "description": "Core API endpoints for Countly Server",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/i": {
      "post": {
        "summary": "Process data",
        "description": "Main endpoint for SDK data collection. Used by SDKs to send analytics data to the server.",
        "tags": [
          "Ingestion"
        ],
        "parameters": [
          {
            "name": "app_key",
            "in": "query",
            "required": true,
            "description": "App key for authentication. Identifies which application the data belongs to.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": true,
            "description": "Unique device identifier. Used to identify a unique user/device in the system.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "description": "Unix timestamp in milliseconds of when the request was generated. Used to handle offline requests.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "hour",
            "in": "query",
            "required": false,
            "description": "Hour of the day (0-23) when the request was generated.",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 23
            }
          },
          {
            "name": "dow",
            "in": "query",
            "required": false,
            "description": "Day of the week (0-6, where 0 is Sunday) when the request was generated.",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 6
            }
          },
          {
            "name": "sdk_name",
            "in": "query",
            "required": false,
            "description": "Name of the SDK used to send the request (e.g., 'javascript', 'ios', 'android').",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sdk_version",
            "in": "query",
            "required": false,
            "description": "Version of the SDK used to send the request.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ip_address",
            "in": "query",
            "required": false,
            "description": "IP address of the device. If not provided, server will use the IP from the request.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "begin_session": {
                    "type": "integer",
                    "enum": [1],
                    "description": "Indicates the start of a new session. Value must be 1."
                  },
                  "end_session": {
                    "type": "integer",
                    "enum": [1],
                    "description": "Indicates the end of a session. Value must be 1."
                  },
                  "session_duration": {
                    "type": "integer",
                    "description": "Duration of the session in seconds. Used to update an ongoing session's duration."
                  },
                  "metrics": {
                    "type": "object",
                    "description": "Device metrics data collected at the start of a session.",
                    "properties": {
                      "_os": {
                        "type": "string",
                        "description": "Operating system name (e.g., 'iOS', 'Android', 'Windows')."
                      },
                      "_os_version": {
                        "type": "string",
                        "description": "Operating system version (e.g., '14.2', '11.0')."
                      },
                      "_device": {
                        "type": "string",
                        "description": "Device model (e.g., 'iPhone12,1', 'SM-G981U')."
                      },
                      "_resolution": {
                        "type": "string",
                        "description": "Screen resolution in format 'widthxheight' (e.g., '1920x1080')."
                      },
                      "_carrier": {
                        "type": "string",
                        "description": "Mobile carrier or network operator name."
                      },
                      "_density": {
                        "type": "string",
                        "description": "Screen density or DPI."
                      },
                      "_locale": {
                        "type": "string",
                        "description": "Device locale in format 'language_COUNTRY' (e.g., 'en_US')."
                      },
                      "_app_version": {
                        "type": "string",
                        "description": "Application version string."
                      },
                      "_manufacturer": {
                        "type": "string",
                        "description": "Device manufacturer (e.g., 'Apple', 'Samsung')."
                      },
                      "_has_nfc": {
                        "type": "boolean",
                        "description": "Whether the device has NFC capability."
                      },
                      "_has_bluetooth": {
                        "type": "boolean",
                        "description": "Whether the device has Bluetooth capability."
                      },
                      "_has_telephone": {
                        "type": "boolean",
                        "description": "Whether the device can make telephone calls."
                      }
                    }
                  },
                  "events": {
                    "type": "array",
                    "description": "Array of custom event objects to record.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Event name or key."
                        },
                        "count": {
                          "type": "integer",
                          "description": "Event occurrence count (usually 1).",
                          "default": 1
                        },
                        "sum": {
                          "type": "number",
                          "description": "Optional sum value associated with the event (for numeric data)."
                        },
                        "dur": {
                          "type": "number",
                          "description": "Optional duration value associated with the event in seconds."
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "Optional timestamp when the event occurred (in milliseconds)."
                        },
                        "segmentation": {
                          "type": "object",
                          "description": "Custom segmentation data for the event."
                        }
                      },
                      "required": ["key"]
                    }
                  },
                  "user_details": {
                    "type": "object",
                    "description": "User profile data for the device_id.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "User's full name."
                      },
                      "username": {
                        "type": "string",
                        "description": "User's username or nickname."
                      },
                      "email": {
                        "type": "string",
                        "description": "User's email address."
                      },
                      "organization": {
                        "type": "string",
                        "description": "User's organization or company."
                      },
                      "phone": {
                        "type": "string",
                        "description": "User's phone number."
                      },
                      "gender": {
                        "type": "string",
                        "description": "User's gender."
                      },
                      "byear": {
                        "type": "integer",
                        "description": "User's birth year (e.g., 1980)."
                      },
                      "picture": {
                        "type": "string",
                        "description": "URL to user's profile picture."
                      },
                      "custom": {
                        "type": "object",
                        "description": "Custom user properties as key-value pairs."
                      }
                    }
                  },
                  "crash": {
                    "type": "object",
                    "description": "Crash report data.",
                    "properties": {
                      "_os": {
                        "type": "string",
                        "description": "Operating system when the crash occurred."
                      },
                      "_os_version": {
                        "type": "string",
                        "description": "Operating system version when the crash occurred."
                      },
                      "_device": {
                        "type": "string",
                        "description": "Device model when the crash occurred."
                      },
                      "_app_version": {
                        "type": "string",
                        "description": "App version when the crash occurred."
                      },
                      "_name": {
                        "type": "string",
                        "description": "Crash name/title (e.g., exception class name)."
                      },
                      "_error": {
                        "type": "string",
                        "description": "Error details, stack trace, or exception message."
                      },
                      "_nonfatal": {
                        "type": "boolean",
                        "description": "Whether the crash is non-fatal (handled exception)."
                      },
                      "_logs": {
                        "type": "string",
                        "description": "Application logs leading up to the crash."
                      },
                      "_custom": {
                        "type": "object",
                        "description": "Custom key-value pairs for additional crash context."
                      }
                    }
                  },
                  "consent": {
                    "type": "object",
                    "description": "User consent settings for different features (GDPR compliance).",
                    "additionalProperties": {
                      "type": "boolean"
                    },
                    "example": {
                      "sessions": true,
                      "events": true,
                      "views": false,
                      "crashes": true
                    }
                  },
                  "location": {
                    "type": "object",
                    "description": "User location data.",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "description": "Latitude coordinate."
                      },
                      "lng": {
                        "type": "number",
                        "description": "Longitude coordinate."
                      }
                    }
                  },
                  "view": {
                    "type": "string",
                    "description": "Name of the view/screen the user is currently viewing."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error processing data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_key\" or \"device_id\""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid app_key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "App key not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Process data (GET method)",
        "description": "Alternative to POST method for SDK data collection, using query parameters. Used by image beacons and environments with POST restrictions.",
        "tags": [
          "Ingestion"
        ],
        "parameters": [
          {
            "name": "app_key",
            "in": "query",
            "required": true,
            "description": "App key for authentication. Identifies which application the data belongs to.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": true,
            "description": "Unique device identifier. Used to identify a unique user/device in the system.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "description": "Unix timestamp in milliseconds of when the request was generated.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "hour",
            "in": "query",
            "required": false,
            "description": "Hour of the day (0-23) when the request was generated.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "dow",
            "in": "query",
            "required": false,
            "description": "Day of the week (0-6, where 0 is Sunday) when the request was generated.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "events",
            "in": "query",
            "required": false,
            "description": "JSON encoded array of event objects.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "begin_session",
            "in": "query",
            "required": false,
            "description": "Set to 1 to begin a new session.",
            "schema": {
              "type": "integer",
              "enum": [1]
            }
          },
          {
            "name": "end_session",
            "in": "query",
            "required": false,
            "description": "Set to 1 to end the current session.",
            "schema": {
              "type": "integer",
              "enum": [1]
            }
          },
          {
            "name": "session_duration",
            "in": "query",
            "required": false,
            "description": "Duration of the session in seconds.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "metrics",
            "in": "query",
            "required": false,
            "description": "JSON encoded object with device metrics.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "safe_api_response",
            "in": "query",
            "required": false,
            "description": "Whether to wait for all data processing to finish before responding",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error processing data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_key\" or \"device_id\""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid app_key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "App key not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/bulk": {
      "post": {
        "summary": "Process bulk requests",
        "description": "Process multiple requests in a single API call",
        "tags": [
          "Ingestion"
        ],
        "parameters": [
          {
            "name": "app_key",
            "in": "query",
            "required": true,
            "description": "App key for authentication",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": true,
            "description": "Unique device identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "safe_api_response",
            "in": "query",
            "required": false,
            "description": "Whether to wait for all data processing to finish before responding",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requests": {
                    "type": "array",
                    "description": "Array of request objects to process",
                    "items": {
                      "type": "object"
                    }
                  },
                  "safe_api_response": {
                    "type": "boolean",
                    "description": "Whether to wait for all requests to finish before responding"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requests processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/users/create": {
      "get": {
        "summary": "Create new user",
        "description": "Create a new user in Countly",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "Admin API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "User data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"full_name\":\"John Doe\",\"username\":\"john\",\"password\":\"password123\",\"email\":\"john@example.com\",\"global_admin\":false}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "full_name": {
                      "type": "string",
                      "description": "Full name of the created user"
                    },
                    "username": {
                      "type": "string",
                      "description": "Username of the created user"
                    },
                    "email": {
                      "type": "string",
                      "description": "Email of the created user"
                    },
                    "global_admin": {
                      "type": "boolean",
                      "description": "Whether the user is a global admin"
                    },
                    "permission": {
                      "type": "object",
                      "description": "Permissions assigned to the user"
                    },
                    "password_changed": {
                      "type": "integer",
                      "description": "Timestamp of when the password was set"
                    },
                    "created_at": {
                      "type": "integer",
                      "description": "Timestamp of user creation"
                    },
                    "_id": {
                      "type": "string",
                      "description": "User ID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error creating user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/users/update": {
      "get": {
        "summary": "Update user",
        "description": "Update an existing user in Countly",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "Admin API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "User update data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"user_id\":\"user_id\",\"full_name\":\"John Smith\",\"email\":\"john.smith@example.com\"}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error updating user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/users/delete": {
      "get": {
        "summary": "Delete user",
        "description": "Delete an existing user from Countly",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "Admin API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "User deletion data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"user_ids\":[\"user_id1\",\"user_id2\"]}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User(s) deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error deleting user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/users/deleteOwnAccount": {
      "get": {
        "summary": "Delete own user account",
        "description": "Allows user to delete their own account",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_token",
            "in": "query",
            "required": false,
            "description": "Authentication token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/users/updateHomeSettings": {
      "get": {
        "summary": "Update home settings",
        "description": "Update user's home dashboard settings",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_token",
            "in": "query",
            "required": false,
            "description": "Authentication token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "homeSettings",
            "in": "query",
            "required": true,
            "description": "Home dashboard settings as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"selectedApps\":[\"app_id1\",\"app_id2\"],\"dashboardView\":\"appsByDefault\"}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Home settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/users/ack": {
      "get": {
        "summary": "Acknowledge notification",
        "description": "Mark notification as acknowledged by the user",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_token",
            "in": "query",
            "required": false,
            "description": "Authentication token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notif_id",
            "in": "query",
            "required": true,
            "description": "Notification ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification acknowledged successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/notes/save": {
      "get": {
        "summary": "Save note",
        "description": "Save a note for an application",
        "tags": [
          "Notes"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "Note data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"note\":\"This is a note\",\"app_id\":\"app_id\",\"ts\":1651240780}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/notes/delete": {
      "get": {
        "summary": "Delete note",
        "description": "Delete a note from an application",
        "tags": [
          "Notes"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_id",
            "in": "query",
            "required": true,
            "description": "Note ID to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/app_users/create": {
      "post": {
        "summary": "Create app user",
        "description": "Create a new app user",
        "tags": [
          "App Users"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID (24 character string)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": true,
            "description": "Device ID for the app user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "did": {
                        "type": "string",
                        "description": "Device ID (should match the device_id in the query parameters)"
                      },
                      "name": {
                        "type": "string",
                        "description": "User name"
                      },
                      "custom": {
                        "type": "object",
                        "description": "Custom properties"
                      }
                    },
                    "required": ["did"],
                    "description": "User data to create"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "Details of the created user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error creating user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/app_users/update": {
      "post": {
        "summary": "Update app user",
        "description": "Update an existing app user",
        "tags": [
          "App Users"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID (24 character string)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object",
                    "description": "Query to find users to update"
                  },
                  "update": {
                    "type": "object",
                    "description": "Data to update using MongoDB update operators like $set",
                    "example": {"$set": {"custom.test": false}}
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Force update if more than one user matches the query"
                  }
                },
                "required": ["query", "update"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error updating user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter or invalid format"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/app_users/delete": {
      "post": {
        "summary": "Delete app user",
        "description": "Delete an existing app user",
        "tags": [
          "App Users"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID (24 character string)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object",
                    "description": "Query to find users to delete"
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Force delete if more than one user matches the query"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "User deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error deleting user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/app_users/export": {
      "get": {
        "summary": "Export app user data",
        "description": "Export all data for app users",
        "tags": [
          "App Users"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID (24 character string)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "Query to find users to export, as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"uid\":\"1\"}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Export created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "appUser_644658291e95e720503d5087_1.json"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error creating export",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/app_users/deleteExport/{id}": {
      "get": {
        "summary": "Delete user export",
        "description": "Delete a previously created user export",
        "tags": [
          "App Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Export ID",
            "schema": {
              "type": "string",
              "example": "appUser_644658291e95e720503d5087_1"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID (24 character string)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Export deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Export deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error deleting export",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/apps/create": {
      "get": {
        "summary": "Create app",
        "description": "Create a new app in Countly",
        "tags": [
          "App Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key of global admin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "App data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"name\":\"My App\",\"country\":\"US\",\"timezone\":\"America/New_York\"}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "App ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "App name"
                    },
                    "key": {
                      "type": "string",
                      "description": "App key for SDK integration"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error creating app",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/apps/update": {
      "get": {
        "summary": "Update app",
        "description": "Update an existing app in Countly",
        "tags": [
          "App Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "description": "App ID (required for app admins)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "App data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"name\":\"Updated App Name\",\"country\":\"US\",\"timezone\":\"America/New_York\"}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error updating app",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/apps/update/plugins": {
      "get": {
        "summary": "Update app plugins",
        "description": "Update the plugins enabled for an app",
        "tags": [
          "App Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "Plugins data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"plugins\":{\"push\":true,\"crashes\":true}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App plugins updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error updating app plugins",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/apps/delete": {
      "get": {
        "summary": "Delete app",
        "description": "Delete an existing app from Countly",
        "tags": [
          "App Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key of global admin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "App data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"app_id\":\"app_id\"}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error deleting app",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/apps/reset": {
      "get": {
        "summary": "Reset app",
        "description": "Reset all data for an app",
        "tags": [
          "App Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key of global admin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "App data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"app_id\":\"app_id\",\"period\":\"reset\"}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error resetting app",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/event_groups/create": {
      "get": {
        "summary": "Create event group",
        "description": "Create a new event group",
        "tags": [
          "Event Groups"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "Event group data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"group_id\":\"test_group\",\"name\":\"Test Group\",\"events\":[\"test_event\",\"second_event\"],\"source_events\":[\"test_event\",\"second_event\"],\"display_map\":{},\"status\":true}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event group created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error creating event group",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/event_groups/update": {
      "get": {
        "summary": "Update event group",
        "description": "Update an existing event group",
        "tags": [
          "Event Groups"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "Event group data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"group_id\":\"test_group\",\"name\":\"Updated Group\",\"events\":[\"event1\",\"event2\",\"event3\"]}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event group updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error updating event group",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/event_groups/delete": {
      "get": {
        "summary": "Delete event group",
        "description": "Delete an existing event group",
        "tags": [
          "Event Groups"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "description": "Event group data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"group_id\":\"test_group\"}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event group deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error deleting event group",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/tasks/update": {
      "post": {
        "summary": "Update task",
        "description": "Update an existing task",
        "tags": [
          "Task Management"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "required": true,
            "description": "Task ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error updating task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"task_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/tasks/delete": {
      "post": {
        "summary": "Delete task",
        "description": "Delete an existing task",
        "tags": [
          "Task Management"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "required": true,
            "description": "Task ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error deleting task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"task_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/tasks/name": {
      "post": {
        "summary": "Rename task",
        "description": "Rename an existing task",
        "tags": [
          "Task Management"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "required": true,
            "description": "Task ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "description": "New task name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task renamed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error renaming task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"task_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/tasks/edit": {
      "post": {
        "summary": "Edit task details",
        "description": "Edit task details",
        "tags": [
          "Task Management"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "required": true,
            "description": "Task ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "report_name",
            "in": "query",
            "required": false,
            "description": "Report name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "report_desc",
            "in": "query",
            "required": false,
            "description": "Report description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "global",
            "in": "query",
            "required": false,
            "description": "Whether the task is global",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoRefresh",
            "in": "query",
            "required": false,
            "description": "Whether the task auto refreshes",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period_desc",
            "in": "query",
            "required": false,
            "description": "Period description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Error updating task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/events/whitelist_segments": {
      "get": {
        "summary": "Whitelist event segments",
        "description": "Set whitelisted segments for events",
        "tags": [
          "Event Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "whitelisted_segments",
            "in": "query",
            "required": true,
            "description": "Segments data as JSON string",
            "schema": {
              "type": "string",
              "example": "{\"event1\":[\"segment1\",\"segment2\"]}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Segments whitelisted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error whitelisting segments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/events/edit_map": {
      "get": {
        "summary": "Edit event map",
        "description": "Edit event mapping configuration",
        "tags": [
          "Event Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_map",
            "in": "query",
            "required": false,
            "description": "Event map as JSON string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_order",
            "in": "query",
            "required": false,
            "description": "Event order as JSON string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_overview",
            "in": "query",
            "required": false,
            "description": "Event overview as JSON string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "omitted_segments",
            "in": "query",
            "required": false,
            "description": "Omitted segments as JSON string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event map edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error editing event map",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/events/delete_events": {
      "post": {
        "summary": "Delete events",
        "description": "Delete one or multiple events",
        "tags": [
          "Event Management"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID (24 character string)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "events",
            "in": "query",
            "required": true,
            "description": "JSON array of event keys to delete",
            "schema": {
              "type": "string",
              "example": "[\"event1\",\"event2\"]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Events deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error deleting events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/events/change_visibility": {
      "get": {
        "summary": "Change event visibility",
        "description": "Change visibility of events",
        "tags": [
          "Event Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "events",
            "in": "query",
            "required": true,
            "description": "JSON array of event IDs to update",
            "schema": {
              "type": "string",
              "example": "[\"event1\",\"event2\"]"
            }
          },
          {
            "name": "set_visibility",
            "in": "query",
            "required": true,
            "description": "Visibility value ('hide' or 'show')",
            "schema": {
              "type": "string",
              "enum": [
                "hide",
                "show"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event visibility changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error changing event visibility",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/token/delete": {
      "get": {
        "summary": "Delete token",
        "description": "Delete an authentication token",
        "tags": [
          "Token Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenid",
            "in": "query",
            "required": true,
            "description": "Token ID to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "Deletion result object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Token not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Token id not provided"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/i/token/create": {
      "get": {
        "summary": "Create token",
        "description": "Create a new authentication token",
        "tags": [
          "Token Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "description": "Time to live in seconds",
            "schema": {
              "type": "integer",
              "default": 1800
            }
          },
          {
            "name": "multi",
            "in": "query",
            "required": false,
            "description": "Whether the token can be used multiple times",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "apps",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of app IDs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endpoint",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of endpoints",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endpointquery",
            "in": "query",
            "required": false,
            "description": "JSON object with endpoint and params",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purpose",
            "in": "query",
            "required": false,
            "description": "Purpose description for the token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The created token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error creating token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error creating token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/token/list": {
      "get": {
        "summary": "List tokens",
        "description": "Get a list of all tokens for the current user",
        "tags": [
          "Token Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_token",
            "in": "query",
            "required": false,
            "description": "Authentication token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Token ID"
                      },
                      "ttl": {
                        "type": "integer",
                        "description": "Time to live in seconds"
                      },
                      "ends": {
                        "type": "integer",
                        "description": "Timestamp when token expires"
                      },
                      "multi": {
                        "type": "boolean",
                        "description": "Whether the token can be used multiple times"
                      },
                      "owner": {
                        "type": "string",
                        "description": "User ID of token owner"
                      },
                      "app": {
                        "type": "string",
                        "description": "App IDs this token is valid for"
                      },
                      "purpose": {
                        "type": "string",
                        "description": "Purpose description for the token"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error retrieving tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error retrieving tokens"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/token/check": {
      "get": {
        "summary": "Check token",
        "description": "Check if a token is valid and get remaining time",
        "tags": [
          "Token Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_token",
            "in": "query",
            "required": false,
            "description": "Authentication token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "description": "Token to check",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token check result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean",
                      "description": "Whether the token is valid"
                    },
                    "time": {
                      "type": "integer",
                      "description": "Time left in seconds"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error checking token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error checking token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/analytics/dashboard": {
      "get": {
        "summary": "Get dashboard data",
        "description": "Get aggregated data for dashboard",
        "tags": [
          "Analytics"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "Period for data (e.g., '30days')",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving dashboard data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/analytics/countries": {
      "get": {
        "summary": "Get country data",
        "description": "Get country distribution data",
        "tags": [
          "Analytics"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "Period for data (e.g., '30days')",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Country data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving country data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/analytics/sessions": {
      "get": {
        "summary": "Get session data",
        "description": "Get session analytics data",
        "tags": [
          "Analytics"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "Period for data (e.g., '30days')",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bucket",
            "in": "query",
            "required": false,
            "description": "Bucket size ('daily' or 'monthly')",
            "schema": {
              "type": "string",
              "enum": [
                "daily",
                "monthly"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving session data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/system/version": {
      "get": {
        "summary": "Get system version",
        "description": "Get the current version of the Countly system",
        "tags": [
          "System"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_token",
            "in": "query",
            "required": false,
            "description": "Authentication token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "System version retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "description": "System version number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving system version",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/system/plugins": {
      "get": {
        "summary": "Get system plugins",
        "description": "Get a list of installed plugins",
        "tags": [
          "System"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_token",
            "in": "query",
            "required": false,
            "description": "Authentication token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plugins retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Plugin name"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving plugins",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/ping": {
      "get": {
        "summary": "Ping server",
        "description": "Check if the server is responsive",
        "tags": [
          "System"
        ],
        "responses": {
          "200": {
            "description": "Server is responsive",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/countly_version": {
      "get": {
        "summary": "Get detailed version info",
        "description": "Get detailed version information including MongoDB version",
        "tags": [
          "System"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auth_token",
            "in": "query",
            "required": false,
            "description": "Authentication token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Version info retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mongo": {
                      "type": "string",
                      "description": "MongoDB version"
                    },
                    "fs": {
                      "type": "object",
                      "description": "Filesystem version marks"
                    },
                    "db": {
                      "type": "object",
                      "description": "Database version marks"
                    },
                    "pkg": {
                      "type": "string",
                      "description": "Package version"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving version info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"api_key\" or \"auth_token\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o": {
      "get": {
        "summary": "Analytics data retrieval",
        "description": "Main endpoint for retrieving analytics data. Uses `method` parameter to determine what data to return.",
        "tags": [
          "Analytics"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "Application ID for which to retrieve data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key for authentication",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "query",
            "required": true,
            "description": "Data retrieval method that determines what data to return",
            "schema": {
              "type": "string",
              "enum": [
                "total_users",
                "locations",
                "sessions",
                "users",
                "carriers",
                "devices",
                "app_versions",
                "cities",
                "events",
                "get_events",
                "top_events",
                "countries",
                "notes",
                "all_apps",
                "jobs",
                "get_event_groups",
                "get_event_group",
                "geodata"
              ]
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "Period for which to retrieve data. Can be a predefined period like '1month' or a custom period in format '[YYYYMMDD,YYYYMMDD]'.",
            "schema": {
              "type": "string",
              "examples": ["30days", "7days", "hour", "[20220101,20221231]"]
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "description": "Timestamp for preventing browser cache",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully. Response format varies by method.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Invalid API key"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/analytics": {
      "get": {
        "summary": "Get analytics data",
        "description": "Retrieve analytics data for the specified app",
        "tags": [
          "Analytics"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "Period for data (e.g., '30days')",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving analytics data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/users": {
      "get": {
        "summary": "Get user data",
        "description": "Retrieve user data for the specified app",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "Period for data (e.g., '30days')",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/locations": {
      "get": {
        "summary": "Get location data (alternative to /o with method=locations)",
        "description": "Get device and user location data segmented by country",
        "tags": [
          "Analytics"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "Period for data (e.g., '30days')",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving location data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/sessions": {
      "get": {
        "summary": "Get session data (alternative to /o with method=sessions)",
        "description": "Get detailed session data including total sessions, unique users, new users, etc.",
        "tags": [
          "Analytics"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "description": "App ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "Period for data (e.g., '30days')",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving session data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Missing parameter \"app_id\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/o/users/all": {
      "get": {
        "summary": "Get all users (alternative to /o/users with path all)",
        "description": "Get all users in the system",
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "description": "API key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "User ID"
                      },
                      "full_name": {
                        "type": "string",
                        "description": "Full name"
                      },
                      "username": {
                        "type": "string",
                        "description": "Username"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address"
                      },
                      "global_admin": {
                        "type": "boolean",
                        "description": "Whether the user is a global admin"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Invalid API key"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OMethodTotal_users": {
        "type": "object",
        "description": "Response for /o method=total_users",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of users"
          },
          "prev-total": {
            "type": "integer",
            "description": "Total number of users in the previous period"
          },
          "change": {
            "type": "string",
            "description": "Percentage change from previous period"
          }
        }
      },
      "OMethodLocations": {
        "type": "object",
        "description": "Response for /o method=locations",
        "properties": {
          "countries": {
            "type": "object",
            "description": "Map of country codes to counts",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "t": {
                  "type": "integer",
                  "description": "Total sessions from this country"
                },
                "u": {
                  "type": "integer",
                  "description": "Unique users from this country"
                },
                "n": {
                  "type": "integer",
                  "description": "New users from this country"
                }
              }
            }
          }
        }
      },
      "OMethodSessions": {
        "type": "object",
        "description": "Response for /o method=sessions",
        "properties": {
          "total_sessions": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of sessions"
              },
              "change": {
                "type": "string",
                "description": "Percentage change from previous period"
              },
              "data": {
                "type": "array",
                "description": "Time series data for sessions",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string",
                      "description": "Date in YYYY-MM-DD format"
                    },
                    {
                      "type": "integer",
                      "description": "Number of sessions on this date"
                    }
                  ]
                }
              }
            }
          },
          "total_users": {
            "type": "object",
            "description": "User statistics",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of users"
              },
              "change": {
                "type": "string",
                "description": "Percentage change from previous period"
              },
              "data": {
                "type": "array",
                "description": "Time series data for users"
              }
            }
          },
          "new_users": {
            "type": "object",
            "description": "New user statistics",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of new users"
              },
              "change": {
                "type": "string",
                "description": "Percentage change from previous period"
              },
              "data": {
                "type": "array",
                "description": "Time series data for new users"
              }
            }
          }
        }
      },
      "OMethodEvents": {
        "type": "object",
        "description": "Response for /o method=events",
        "properties": {
          "list": {
            "type": "array",
            "description": "List of event keys",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OMethodGetEvents": {
        "type": "object",
        "description": "Response for /o method=get_events",
        "properties": {
          "event_key": {
            "type": "object",
            "description": "Data for specific event",
            "properties": {
              "c": {
                "type": "integer",
                "description": "Total event count"
              },
              "s": {
                "type": "number",
                "description": "Sum of event values"
              },
              "dur": {
                "type": "number",
                "description": "Total duration of events"
              },
              "segmentation": {
                "type": "object",
                "description": "Event segmentation data"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "query",
        "name": "api_key"
      },
      "AuthToken": {
        "type": "apiKey",
        "in": "query",
        "name": "auth_token"
      },
      "AppKey": {
        "type": "apiKey",
        "in": "query",
        "name": "app_key"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "AuthToken": []
    },
    {
      "AppKey": []
    }
  ]
}