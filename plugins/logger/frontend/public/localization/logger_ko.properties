#logger
logger.title = Incoming Data Logs
logger.description = Log requests made to the write API to review and debug incoming data
logger.auto-refresh= Enable Auto-refresh
logger.auto-refresh-stop= Stop Auto-refresh
logger.auto-refresh-is= Auto-refresh is
logger.enabled= enabled
logger.auto-refresh-help= Automatically refresh incoming data logs
logger.all = All Requests
logger.event = 이벤트
logger.session = 세션
logger.metric = 메트릭
logger.consent = Consents
logger.type = 종류
logger.timestamp = 요청 시간
logger.requests = Request Received
logger.version = 앱 버전
logger.device = 디바이스
logger.location = 로케이션
logger.info = 정보
logger.details = Details
logger.user-details = 사용자 세부정보
logger.remote-config = Remote Config
logger.performance-monitoring = Performance
logger.crashes = 크래쉬
logger.sdk = SDK 정보
logger.request-header = 헤더
logger.request-payload = 데이타
logger.request-reponse = 응답
logger.request-canceled = 취소된 요청
logger.problems = 프로그램 발생
logger.collection-description = Only up to last {0} incoming data logs are stored
logger.capped-remind = 당신의 수집품은 아직 캡슐화되지 않았습니다! 시스템 성능이 저하될 수 있다는 점에 유의하십시오.
logger.state = Set incoming data logging state
logger.limit = Set incoming data logging limit per minute
logger.state-on = On
logger.state-off = Off
logger.state-automatic = Automatic
logger.state-off-warning = Incoming data logging is turned off. You can change it using <a href="/dashboard#/{0}/manage/configurations"> application configuration page</a>.

configs.help.logger-state = If incoming data logging state is set to "On", only the last 1000 requests will be saved. When the state is set to "Automatic", requests will continue to be logged until the limit per minute is reached.
configs.help.logger-limit = Incoming data logging will turn off automatically when the number of requests logged per minute limit is reached. This will apply only when request logger state is set to "Automatic".
