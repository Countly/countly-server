# DO NOT EDIT THIS FILE AS IT WILL BE OVERRIDEN DURING TRANSLATION SYNC
# IF YOU WOULD LIKE TO HELP COUNTLY TO BE TRANSLATED INTO YOUR LANGUAGE
# PLEASE VISIT https://www.transifex.com/osoner/countly

push.plugin-title = 推送通知
push.plugin-description = 通过iOS和Android推送通知提高忠诚度、用户留存和满意度
push.sidebar.section = 信息推送
push.sidebar.overview = 概要
push.sidebar.messages = 消息

push.no-message = 没有消息
push.create = 创建消息
push.create-message-n = Create Message to {0} users

mgmt-plugins.push.here = here
mgmt-plugins.push.ios = iOS Settings
mgmt-plugins.push.ios.type = Authentication type
mgmt-plugins.push.ios.type.desc = Choose between Token-based authentication (P8 file) & Sandbox + Production certificate (P12 file)
mgmt-plugins.push.ios.apn_token = Key file (P8)
mgmt-plugins.push.ios.apn_token.desc = Token-based authentication file you downloaded from Apple.
mgmt-plugins.push.ios.key = Key ID
mgmt-plugins.push.ios.key.desc = ID of a P8 key, usually it's encoded in P8 filename.
mgmt-plugins.push.ios.team = Team ID
mgmt-plugins.push.ios.team.desc = ID of the team your app is registered to. You can get one from
mgmt-plugins.push.ios.bundle = Bundle ID
mgmt-plugins.push.ios.bundle.desc = Main ID of your application.
mgmt-plugins.push.ios.apn_universal = Sandbox + Production certificate (P12)
mgmt-plugins.push.ios.apn_universal.desc = Your universal certificate file you downloaded from Apple.
mgmt-plugins.push.ios.pass = Passphrase
mgmt-plugins.push.ios.pass.desc = Secret password you've set when exporting P12 file from Keychain Access.
mgmt-plugins.push.android = Android (Google FCM)
mgmt-plugins.push.android.key = Firebase key
mgmt-plugins.push.android.key.desc = Your server key, you can get one from
mgmt-plugins.push.h = Android (Huawei Push Kit)
mgmt-plugins.push.h.key = Huawei App ID
mgmt-plugins.push.h.key.desc = Your numerical Huawei App ID (Client ID)
mgmt-plugins.push.h.secret = App Secret
mgmt-plugins.push.h.secret.desc = Huawei App Secret, sign secret of your app can be found in code signing properties or at
mgmt-plugins.push.h.secret.hds = Huawei developer portal
mgmt-plugins.push.error.nokey = Please enter Key ID
mgmt-plugins.push.error.noteam = Please enter Team ID
mgmt-plugins.push.error.nobundle = Please enter application Bundle ID
mgmt-plugins.push.error.nofile = Please select key or certificate file
mgmt-plugins.push.error.h.key = Please enter Huawei App ID
mgmt-plugins.push.error.h.secret = Please enter Huawei App Secret
mgmt-plugins.push.error.h.keynum = Huawei App ID can contain only digits
mgmt-plugins.push.uploaded = Download file uploaded previously
mgmt-plugins.push.uploaded.p12 = Universal certificate (p12) is already uploaded
mgmt-plugins.push.uploaded.p8 = Key file (p8) is already uploaded
mgmt-plugins.push.uploaded.bundle = Bundle id of this certificate:
mgmt-plugins.push.detected = Detected key type:
mgmt-plugins.push.rate = Rate limit
mgmt-plugins.push.rate.rate = Maximum number of notifications scheduled per period
mgmt-plugins.push.rate.help = Push notifications sent to FCM and APNS will separately be rate limited based on this configuration for each push notification campaign
mgmt-plugins.push.rate.period = Period duration (seconds)
mgmt-plugins.push.rate.period.help = Timeframe to apply the rate limit to

systemlogs.action.push_message_created = 已创建的推送消息
systemlogs.action.push_credentials_update = 已更新的推送凭据
systemlogs.action.push_message_deleted = 已删除的推送消息

# Help
help.manage-apps.push-gcm-key = Server API Key for Firebase Cloud Messaging (FCM). It's required if you're going to send push notifications to your Android app users. You can get one from Firebase Console.
help.mgmt-plugins.push.ios.type = Countly supports 2 types of authentication with APN: Token-based (p8 file, JWT) & Sandbox + Production certificate (p12 file).

help.dashboard.push.sent = 在选定的时间段内发送此应用的累计信息。
help.dashboard.push.actions = 此应用的操作数。操作表示用户对发送信息有反应。请参阅SDK指南，了解如何在应用中启用此指标。
help.dashboard.total-users-push = Total number of users of this app.
help.dashboard.messaging-users = A number of users who agreed to receive push notifications, that is a number of users with APN or FCM tokens stored in the database.

pu.po.title = 创建推送通知
pu.po.desc = 以4个简单的步骤撰写您的推送通知

pu.po.view.title = 推送通知
pu.po.view.desc = 消息详细信息

pu.po.preview = Preview
pu.po.preview.help = Please note that this is a preview screen. What you see here may not be same as what end users see on their smartphones due to varying device sizes.

pu.po.tt.pers = Add personalized content
pu.po.tt.emoji = Add emoji

pu.po.tab0.title = 应用和平台
pu.po.tab0.title.auto = 平台
pu.po.tab0.desc = 抵达站

pu.po.tab1.title = 计划中
pu.po.tab1.desc = 设置消息日期
pu.po.tab1.title.auto = 活动规则
pu.po.tab1.desc.auto = 触发器和日期

pu.po.tab1.chr = Cohorts
pu.po.tab1.chr-desc = Send to the users currently in selected cohorts

pu.po.tab1.aud = Audience Selection
pu.po.tab1.now.t = Now
pu.po.tab1.now.d = Select users now
pu.po.tab1.later.t = Before sending
pu.po.tab1.later.d = Select users right before sending the message

pu.po.tab2.ddc = Delivery Date Calculation
pu.po.tab2.ddc.arr = Relative to the date event arrived to the server
pu.po.tab2.ddc.evt = Relative to the date event occurred on a device
# pu.po.tab2.ddc.h = In "event occurrence" case Countly only sends notifications within 30 minutes of actual event recording date, discarding any "late" notifications which could be triggered due to event arriving to the server with a delay because of networking issues.
# pu.po.tab2.ddc.h = Note that larger amount of notifications won't be sent in case of event occurence date since an event might arrive to the server with a delay due to networking issues. On the other hand, accuracy of "event occurence" case is better, since there won't be any late notifications.
# pu.po.tab2.ddc.arr = Relative to the event arrival to the server date
# pu.po.tab2.ddc.evt = Relative to the event occurence on the device date

pu.po.tab2.trc = Behaviour when trigger condition is no longer met
pu.po.tab2.trc.true = Cancel when user exits selected cohort(s)
pu.po.tab2.trc.false = Cancel when user enters selected cohort(s) back
pu.po.tab2.trc.dont = Send anyway

pu.po.tab2.title.auto = 消息发送
pu.po.tab2.desc.auto = 周期性与限制

pu.po.compose.title = 消息
pu.po.compose.desc = 创建内容

pu.po.review.title = 回顾
pu.po.review.desc = 检查您的消息

pu.po.tab0.apps = 应用
pu.po.tab0.add = 添加应用
pu.po.tab0.select-apps = 筛选APP
pu.po.tab0.select-apps-desc = Only apps with APN or FCM credentials are displayed
pu.po.tab0.select-platforms = 选择平台
pu.po.tab0.select-platforms-no = Selected app doesn't have APN or FCM credentials
pu.platform.i = iOS
pu.platform.a = Android
pu.po.prev = 上一步
pu.po.next = 下一步
pu.po.send = 发送!
pu.po.start = 开始
pu.po.edit = Save
pu.po.close = 关闭
pu.po.duplicate = 重复
pu.po.delete = 删除

pu.po.tab1.testing = 测试
pu.po.tab1.testing-desc = 发送给生产用户或测试用户？
pu.po.tab1.testing-prod = 生产用户
pu.po.tab1.testing-test = 测试用户
pu.po.tab1.testing-test-desc = 仅限开发和测试用户

pu.po.tab1.scheduling = 计划中
pu.po.tab1.scheduling-desc = 立即发送或安排发送以供日后使用
pu.po.tab1.scheduling-now = 立刻发送
pu.po.tab1.scheduling-auto-now = 现在启动
pu.po.tab1.scheduling-now-desc = 一旦点击按钮，推送将立即开始
pu.po.tab1.scheduling-date = 预定
pu.po.tab1.scheduling-date-desc = 为此邮件设置特定的日期和时间
pu.po.tab1.tz = 安装用户的时区发送？
pu.po.tab1.tz-desc = Message can either be sent to all users at once using date and time you specified or it can be sent to each user in their timezones.
pu.no = 否
pu.po.tab1.tz-no-desc = 立即发送所有通知
pu.po.tab1.tz-yes = 在用户时区发送
pu.po.tab1.tz-yes-desc = 按照用户的时区发送每个通知
pu.po.tab1.tz-yes-help = Only SDK 16.12+ (iOS & Android native SDKs, check documentation for others) sends timezone information to the server. Server will use default app timezone in case SDK haven't reported timezone yet.

pu.po.tab1.geos = 地缘位置
pu.po.tab1.geos-desc = 按照用户上次已知的位置过滤用户？
pu.po.tab1.geos.no = 无过滤


pu.po.recipients.s = 收件人: {0}
pu.po.recipients.m = 收件人: {0}
pu.po.recipients.temporary = 用户数计算仍在运行，在极端情况下可能需要几分钟的时间。随时发送您的消息，不用等待。

pu.po.tab2.message.type = 消息类型
pu.po.tab2.extras = 其他选项

pu.type.message = 消息
pu.type.data = 仅数据
pu.type.rich = 丰富

pu.po.loading = 我们正在统计您的用户
pu.po.loading-desc = 请稍候，很快就会完成

pu.po.sending = 保存进行
pu.po.sending-desc = 一会儿

pu.po.sent = 已保存
pu.po.sent-desc = 都好！

pu.po.tab2.placeholder = 请填写信息（默认是必填的，如果需要添加更多本地化的消息）
pu.po.tab2.default-message = 你的消息
pu.po.tab2.default-message.invalid = 默认消息是必填
pu.po.tab2.default-button-title.invalid = 默认按钮标题是必填
pu.po.tab2.default-button-link.invalid = 默认按钮网链是必填
pu.po.tab2.extras.sound = 发送声音
pu.po.tab2.extras.sound.invalid = 声音必须是字符串
pu.po.tab2.extras.badge = 添加徽章
pu.po.tab2.extras.badge.invalid = 徽章必须是有效的号码
pu.po.tab2.extras.badge.help = 默认情况下，iOS支持徽章。Android需要额外的步骤（请查看Android SDK指南获取更多详细信息）
pu.po.tab2.extras.media = 附件网链
pu.po.tab2.extras.media.placeholder = 图像网链
pu.po.tab2.extras.media.invalid = 必须使用有效URL而且小于10MB的图像（JPG、PNG）或动画（GIF）的尺寸小于5MB、音频（MP3、WAV、AIF）小于5MB或小于50MB的视频（MPEG、MPEG2、MPEG4）
pu.po.tab2.extras.media.toobig = 媒体图像和动画附件必须小于10MB、音频小于5MB和视频小于50MB
pu.po.tab2.extras.media.help = iOS 10+支持音像附件，但iOS 9完全不支持音像。Android只支持图像。如果不支持音像，用户只看到信息文本
pu.po.tab2.extras.url = 点击网址上
pu.po.tab2.extras.url.invalid = 网址必须有效
pu.po.tab2.extras.url.help = 当用户点击消息时，默认URL或深层链将显示
pu.po.tab2.extras.data = 发送JSON
pu.po.tab2.extras.data.invalid = 此字段必须包含有效的JSON字符串
pu.po.tab2.extras.data.placeholder = JSON字符串
pu.po.tab2.extras.data.help = 应用相关的JSON数据可以与标准内容一起发送
pu.po.tab2.mtitle = 消息标题
pu.po.tab2.mtitle.placeholder = 信息的可选标题
pu.po.tab2.mtext = 消息文本
pu.po.tab2.mbtn = 按钮
pu.po.tab2.mbtns = 按钮数量
pu.po.tab2.mbtn.urls = 按钮的URLs
pu.po.tab2.mbtn.req = 按钮标题是必填
pu.po.tab2.mbtn.url = 网址必须有效
pu.po.tab2.mbtn.0 = 按钮0
pu.po.tab2.mbtn.1 = 按钮1
pu.po.tab2.mbtn.2 = 按钮2
pu.po.tab2.btntext = 按钮文本
pu.po.tab2.urlordeep = 网链或深层链接
pu.po.tab2.rich = 丰富的推送选项
pu.po.tab2.mmedia = 多媒体
pu.po.tab2.mmedia.type.image = 图像
pu.po.tab2.mmedia.type.anima = 动画
pu.po.tab2.mmedia.type.audio = 声音
pu.po.tab2.mmedia.type.video = 视频
pu.po.tab2.mmedia.type.warn.android = Android不支持这种音像
pu.po.tab2.mmedia.status = 请求状态：
pu.po.tab2.default-message.help = 所有用户的默认本地化。 您可以通过为特定区域设置自定义消息和按钮名称。
pu.po.no-users = 很抱歉，指定的选项没有推送功能的使用者。
pu.po.no-users-try-change = 尝试更改
pu.po.no-users-try-change-apps = platforms or production-test switch
pu.po.no-users-start-over = 重来
pu.po.tab2.variable = Variable
pu.po.tab2.capital = Make variable value start from capital letter
pu.po.tab2.fallback = Fallback value
pu.po.tab2.help = Default value which will be used in case user profile doesn't have this variable
pu.po.tab2.props = User Properties
pu.po.tab2.cust = Custom Variables
pu.po.tab2.varpl = Select variable
pu.po.tab2.fallpl = Enter fallback value
pu.po.tab2.tt = User''s "{0}" property which falls back to "{1}"

datepicker.dt.click = 设置日期和时间
datepicker.tz = 发送用户的时区
datepicker.clear = 清除
datepicker.apply = 应用
datepicker.pick-time = 挑选时间

pu.locale.default = 默认
pu.locale.null = 未知
pu.po.tab3.review = 评论
pu.po.tab3.apps = 应用
pu.po.tab3.platforms = 平台
pu.po.tab3.date = 日期
pu.po.tab3.date.now = 编写信息的时段
pu.po.tab3.date.intz = ：用户时区
pu.po.tab3.unknown = Unknown
pu.po.tab3.type = 类型
pu.po.tab3.type.message = 正文消息
pu.po.tab3.type.data = 数据
pu.po.tab3.type.update = 更新(已弃用)
pu.po.tab3.type.review = 评论(已弃用)
pu.po.tab3.type.category = 类别(已弃用)
pu.po.tab3.type.link = 网址(已弃用)
pu.po.tab3.test = 发送到测试设备
pu.po.tab3.test.true = 肯定
pu.po.tab3.test.false = 否
pu.po.tab3.btns = 按钮
pu.po.tab3.media = 音像
pu.po.tab3.extras = 标准选项

pu.po.tab3.extras.sound = 声音
pu.po.tab3.extras.badge = iOS徽章
pu.po.tab3.extras.url = 点击网址上
pu.po.tab3.extras.data = 额外数据
pu.po.tab3.extras.media = 音像

pu.po.tab3.date.date = Scheduled to be sent on
pu.po.tab3.date.sent = 发送
pu.po.tab3.date.tz = 在用户的时区发送

pu.po.tab3.audience = 收件人

pu.po.tab3.errors = 错误
pu.po.tab3.errors.code = 码
pu.po.tab3.errors.message = 错误
pu.po.tab3.errors.count = 计数

pu.po.confirm = 确认发送
pu.po.confirm.ready = I’m ready to send this message
pu.po.confirm.s = to {0} receipient
pu.po.confirm.m = to {0} receipients
pu.po.recipients.message = {0} users will receive this campaign after it is started.
pu.po.recipients.message.details = 这条消息将在应用程序用户匹配到活动条件时自动发送给他们。
pu.po.recipients.message.edit = Message modification only affects notifications scheduled after modification takes place.

pu.dash.users = 用户
pu.dash.users.total = 累计用户
pu.dash.users.enabl = 可启用消息传递功能的用户
pu.dash.totals = 总体
pu.dash.metrics = 指标
pu.dash.metrics.sent = 已发送邮件
pu.dash.metrics.acti = 执行的操作
pu.dash.create = 创建消息
pu.dash.monthly = 每月
pu.dash.weekly = 每周
pu.dash.messages = 消息
pu.dash.messages.all = 全部
pu.dash.messages.api = API
pu.dash.messages.dash = 仪表盘
pu.dash.actions = 动作
pu.dash.sent = 发送


pu.t.nothing = 没有找到记录
pu.t.search = 按默认消息搜索
pu.t.message = 消息
pu.t.apps = 应用
pu.t.status = 状态
pu.t.created = 已创建
pu.t.sent-scheduled = 发送日期/预定
pu.t.result = 发送/已行动

push.message.status.initial = Initial
push.message.status.created = Created
push.message.status.scheduled = Scheduled
push.message.status.sending = Sending
push.message.status.sending-errors = Sending with errors
push.message.status.aborted = Aborted
push.message.status.sent = Sent
push.message.status.sent-errors = Sent with errors

push.message.status.auto.true = 活跃的
push.message.status.auto.false = 暂停的

push.error.econnrefused = Countly cannot connect to APN/FCM. Please check your proxy server settings (if any) and / or server connectivity to APN/FCM servers.
push.error.timeout = Connection timed out. Please ensure that server has stable connection to APN and/or FCM.
push.error.crash = Process crashed while sending this messsage. Please contact support.
push.error.exited = Process exited while sending this messsage. Please contact support.
push.error.exited-sent = 由于APNS意外关闭连接，发送此消息时进程退出。有些通知可能已经发送了两次(最多500个)。
push.error.3-eof = APN连接错误。可能的原因包括:无效的证书/ 权限密钥，防火墙，系统根证书(CA)问题。
push.error.no-credentials = 您没有任何应用平台组合的凭据。
push.error.no-app-credentials = This application doesn't have any push notification credentials set.
push.error.no-cohorts = Automated messages depend on Cohorts and Events, yet you don't have any of those.
push.error.cohorts-deleted = This message cannot be activated since some of cohorts used it have been deleted.
push.error.no.cohorts = No Cohorts or events
push.error.no.credentials = No credentials
push.error.i.understand = OK, I understand


push.errorCodes.bug = 你发现了一个错误！请与支持人员联系。
push.errorCodes = 错误:
push.errorCode.i400 = APN 400错误请求
push.errorCode.i400+BadDeviceToken.desc = The push token received from your app by Countly Server was rejected by APNS as invalid. Please make sure you set `pushTestMode` property on the SDK's initial configuration correctly. Also make sure provisioning profile (Development or Distribution) is valid, bundle ID is correct and entitlements are properly set.
push.errorCode.i400+MissingTopic.desc = Server failed to parse the certificate, please ensure you use universal certificate and contact support if you do
push.errorCode.i400+DeviceTokenNotForTopic.desc = Probably APNS certificate doesn't correspond to the Bundle ID of your application
push.errorCode.i400+TopicDisallowed.desc = Sending notifications to this topic is not allowed. Apple rejects sending notifications to this topic, most probably there is no such app in Certificates, Identifiers & Profiles portal.
push.errorCode.i403 = APN 403证书错误
push.errorCode.i403.desc = Authentication error, please generate and upload new certificate from a Mac used to make this particual app build
push.errorCode.i403+InvalidProviderToken.desc = APN 403错误：错误的密钥提供。请检查你的Auth key文件， Team ID & Bundle ID - 其中有部分是错误的值。
push.errorCode.i405 = APN 405错误的方法
push.errorCode.i405.desc = push.errorCodes.bug
push.errorCode.i413 = APN 413有效负载太大
push.errorCode.i413.desc = 邮件过大，APN拒绝提供。
push.errorCode.i429 = APN 429请求过多
push.errorCode.i429.desc = push.errorCodes.bug
push.errorCode.i500 = APN 500内部错误
push.errorCode.i500.desc = Apple服务器意外返回HTTP错误500.请稍后再试。
push.errorCode.i503 = APN 503关闭
push.errorCode.i503.desc = Apple服务器意外地决定关闭返回HTTP错误503.请稍后再试。

push.errorCode.a200 = FCM 200 message error
push.errorCode.a200+MissingRegistration.desc = push.errorCodes.bug
push.errorCode.a200+InvalidRegistration.desc = Probably you modified the way SDK handles FCM tokens. Please ensure you do it right or contact support.
push.errorCode.a200+InvalidParameters.desc = Invalid request parameters. Please send server logs to Countly support.
push.errorCode.a200+MismatchSenderId.desc = Invalid Sender ID. Most probably SDK competes for tokens with other Firebase SDK you have in your app. Please override the way our SDK or another SDK get a token so they would end up using the same token.
push.errorCode.a200+MessageTooBig.desc = 讯息太大，Google拒绝放送。
push.errorCode.a200+InvalidDataKey.desc = 邮件包含无效的数据密钥，请检查：
push.errorCode.a200+InvalidTtl.desc = push.errorCodes.bug
push.errorCode.a200+DeviceMessageRateExceeded.desc = 您发送邮件的频率比Google允许的频率更高，请不要太频繁。
push.errorCode.a200+TopicsMessageRateExceeded.desc = 您发送邮件的频率与Google允许的频率相同，请不要太频繁。
push.errorCode.a400 = FCM 400 JSON error
push.errorCode.a400.desc = push.errorCodes.bug
push.errorCode.a401 = FCM 401 Authentication error
push.errorCode.a400.desc = push.errorCodes.bug
push.errorCode.a500 = FCM 500 Internal error
push.errorCode.a500.desc = Google服务器意外地传回了HTTP错误500.请稍后再试。
push.errorCode.a200+Unavailable.desc = Google服务器意外地传回HTTP错误200 +不可用。请稍后再试。
push.errorCode.a200+InternalServerError.desc = Google服务器意外地传回HTTP错误200 + InternalServerError。请稍后再试。
push.errorCode.a501 = FCM 501 Error
push.errorCode.a502 = FCM 502 Error
push.errorCode.a503 = FCM 503 Error
push.errorCode.link.i = 苹果文档
push.errorCode.link.a = 谷歌文档
push.errorCode.skiptz = Too late to send
push.errorCode.skiptz.desc = This much notifications have been discarded because time of arrival would be at least 60 minutes later than expected (either due to user's timezone, or due to networking issues).
push.errorCode.del = Message deleted
push.errorCode.del.desc = This much notifications have been discarded their message has been deleted.
push.errorCode.aborted = Aborted
push.errorCode.aborted.desc = This much messages have been removed from queue after an unrecoverable error. Please check error message above or contact support if there's no error message.
push.errorCode.consent = Consent cancelled
push.errorCode.consent.desc = This much messages have been removed from queue after user removed push consent.

push.totals.processed = 已处理
push.totals.sent = 已接受
push.totals.errors = 错误

pu.po.users.s = {0}用户
pu.po.users.m = {0}用户
pu.po.metrics = 指标
pu.po.metrics.processed = 已处理
pu.po.metrics.processed.desc = How many notifications have been processed so far
pu.po.metrics.sent = 成功发送
pu.po.metrics.sent.desc = How many notifications have been accepted by APNS & FCM
pu.po.metrics.sent.none = 没有发送通知！请检查邮件错误
pu.po.metrics.sent.one = 你的通知已发送！
pu.po.metrics.sent.all = 所有通知都会发送！
pu.po.metrics.actions = 已行动
pu.po.metrics.actions.desc = 有多少用户执行推送通知操作
pu.po.metrics.actions.all = 所有用户执行操作！做得好！
pu.po.metrics.actions.performed = 执行操作
pu.po.metrics.actions0.performed = 点击默认网链。
pu.po.metrics.actions1.performed = 点击第一按钮
pu.po.metrics.actions2.performed = 点击第二按钮
pu.po.left.to.send.s = {0}通知要发送
pu.po.left.to.send.m = 还有{0}个通知要发送
pu.po.left.to.send.none = 所有通知都会发送！
pu.po.left.to.send.batch = 下一批将从{0}开始。
pu.po.expired.s = {0}令牌已过期
pu.po.expired.m = {0}令牌已过期
pu.po.unset.s = {0}令牌已过期
pu.po.unset.m = {0}令牌已过期
pu.po.errors.s = 由于错误，未能发送{0}通知
pu.po.errors.m = {0}个通知由于错误而未发送

pu.apn.uni = 通用证书(生产和沙盒)
pu.apn.none = 没有

pu.gcm.gcm = FCM Key
pu.gcm.none = 没有

pu.remove = 删除凭据
pu.validate = 验证
pu.validating = 验证凭据
pu.validation.error = 凭证错误：
pu.remove = 删除凭据
pu.creds.none = 没有
pu.creds.type.apn_universal = APN通用证书已定
pu.creds.type.apn_token = 设置了APN 权限密钥
pu.creds.type.gcm = FCM Server API Key is set
pu.creds.set.gcm = Enter Firebase Server Key
pu.creds.cert = P12证书
pu.creds.pass = 密码
pu.creds.auth_key = P8密钥文件
pu.creds.key_id = 权限密钥ID
pu.creds.team_id = 团队ID
pu.creds.bundle_id = Bundle ID
pu.creds.apn.type.apn_universal = APN证书(沙箱及生产)
pu.creds.apn.type.apn_token = APN 权限密钥

userdata.push = 推送令牌
pu.tk.id = APN测试令牌（开发）
pu.tk.ia = APN测试令牌（特设或TestFlight）
pu.tk.ip = APN生产今牌
pu.tk.at = FCM Test token
pu.tk.ap = FCM Production token
pu.tk.ht = Huawei Test token
pu.tk.hp = Huawei Production token

#Automated Push
pu.dash.btn-group.create-message = 新建信息
pu.dash.btn-group.automated-message = 自动消息
pu.dash.btn-group.automated-message-desc = 创建一个自动推送活动，当用户的应用程序使用行为符合既定标准时向用户发送一条消息。
pu.dash.btn-group.automated-message-link = Learn more about automation
pu.dash.btn-group.one-time-message = 一次性的消息
pu.dash.btn-group.one-time-message-desc = 创建一个一次性的通知推送活动在将来某一时间发送。
pu.dash.btn-group-available-in-enterprise = 企业版可用
pu.dash.btn.learn-more = 了解更多关于自动操作的信息

pu.po.tab1.trigger-type = 触发类型
pu.po.tab1.trigger-type.entry = 进入群组
pu.po.tab1.trigger-type.exit = 退出群组
pu.po.tab1.trigger-type.event = Performed Event
pu.po.tab1.cohort-entry-desc = 当用户进入你选择的任何群组时触发
pu.po.tab1.cohort-exit-desc = Triggered when user exits from any of the cohorts you select
pu.po.tab1.cohort-event-desc = Triggered when user performs a selected event
pu.po.tab1.select-cohort = Select one or more cohorts to set a trigger
pu.po.tab1.select-cohort-desc = 重新计算以上群组将触发自动发送消息设置
pu.po.tab1.select-cohort-placeholder = 选择群组
pu.po.tab1.select-event = Select one or more events to set a trigger
pu.po.tab1.select-event-placeholder = Select event(s)
pu.po.tab1.campaign-start-date = 活动开始时间
pu.po.tab1.additional-options = 附加选项
pu.po.tab1.campaign-end-date = 活动结束日期

pu.po.tab2.delivery-method = 发送方式
pu.po.tab2.delivery-method-desc = 当您的信息要发送的时候选择
pu.po.tab2.immediately = 立即
pu.po.tab2.immediately-desc = 当触发群组重新计算时，立即发送消息
pu.po.tab2.immediately-desc-event = Deliver the message as soon as triggering event reached the server
pu.po.tab2.delayed = 延时的
pu.po.tab2.delivery-time = 发送时间
pu.po.tab2.delivery-time-desc = 为您的消息设置一个可选择的发送时间
pu.po.tab2.delivery-end-desc = Optional date when server should stop sending messages
pu.po.tab2.send-in-user-tz = 依据用户所处时区在 发送
pu.po.tab2.select-time = 选择时间
pu.po.tab2.capping = 上限
pu.po.tab2.capping-desc = 为每个用户配置消息数量。启用此选项将限制发送给同一用户的消息数量。
pu.po.tab2.capping.no = 未折叠
pu.po.tab2.capping.no-desc = Message is sent whenever user entered to or exited from the cohort
pu.po.tab2.capping.no-desc-event = Message is sent whenever user's event is received by the server
pu.po.tab2.capping.yes = 受限
pu.po.tab2.capping.yes-desc = 消息数量被限制
pu.po.tab2.message-per-user = 每个用户的最多消息量
pu.po.tab2.message-per-user-desc = 个人用户可以从本次活动中获得的全部消息数量
pu.po.tab2.sleep = 消息间隔的最短时间
pu.po.tab2.sleep-desc = 用户可以收到一个重复的消息，除非她/他在条件设置里设定了不接收重复的消息之间的最短间隔

pu.po.tab4.apps-platforms = Platforms
pu.po.tab4.app = 应用程序
pu.po.tab4.campaign-rules = 活动规则
pu.po.tab4.trigger-type = 触发类型
pu.po.tab4.trigger-cohort-entry = 进入群组
pu.po.tab4.trigger-cohort-exit = 退出群组
pu.po.tab4.cohorts.no = Cohort(s) were deleted
pu.po.tab4.cohorts.s = 群组
pu.po.tab4.cohorts.m = 群组({ 0 })
pu.po.tab4.events.no = Events(s) were deleted
pu.po.tab4.events.s = Event
pu.po.tab4.events.m = Events ({0})
pu.po.tab4.caping = 上限
pu.po.tab4.caping-message = 给每个用户发送的最多消息量
pu.po.tab4.message-content = 信息内容
pu.po.tab4.message-title = 标题
pu.po.tab4.message-text = 文本
pu.po.tab4.message-sound = 声音
pu.po.tab4.message-media = 媒体
pu.po.tab4.message-badge = 证章

push.po.one-time-messages = 一次性的信息
push.po.automated-messages = 自动消息
push.po.table.dublicate = 副本
push.po.table.resend = Resend failed notifications
push.po.table.edit = Edit
push.po.table.delete = 删除
push.po.table.recipients = View recipients

pu.po.progress = 进展
pu.po.progress.auto = 30天概览
pu.never = 从不
pu.days.s = 天
pu.days.m = 天数
pu.hours.s = 小时
pu.hours.m =时长
pu.messages.s = 消息
pu.messages.m = 消息
pu.messages.between = between messages
pu.min = Minimum
pu.max = Maximum
pu.enable = Enable
pu.ended = Campaign ended
pu.send-message = Send a Message
pu.send-message-desc = Send a push notification to all users matching your query criteria

push.proxyhost = Proxy Hostname
push.proxyport = Proxy Port
push.proxyuser = Proxy Username
push.proxypass = Proxy Password

push.note.gcm.t = Your push notifications can't be delivered
push.note.gcm.m = Following apps have GCM credentials instead of Firebase ones: <b>{0}</b>.<br/><br/>Usage of GCM is no longer possible since Google stopped accepting requests to GCM endpoint.<br/><br/>Please update app credentials to a valid FCM server key.

mail.autopush-error-subject = Countly Automated Push Problem
mail.autopush-error = Hi {0},<br/><br/>Your <a href="{1}">automated message</a> cannot be sent due to a repeating error. Please review message status and reactivate the message once the problem is resolved.<br/><br/>Best,<br/>A fellow Countly Admin
internal-events.[CLY]_push_sent = Push sent
internal-events.[CLY]_push_action = Push action
